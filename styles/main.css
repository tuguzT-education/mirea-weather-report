@charset "UTF-8";
@import url('https://fonts.googleapis.com/css2?family=Exo+2:wght@300&display=swap');

/* Define color variables */
:root {
	--wr_dark_blue: rgb(57, 125, 255);
	--wr_blue: rgb(148, 179, 252);
	--wr_light_blue: rgb(198, 212, 252);
	--wr_light_blue_plus: rgb(246, 249, 255);
	--wr_gray: rgb(191, 199, 214);
	--wr_dark_gray: rgb(85, 94, 110);
	--wr_darker_gray: rgb(38, 46, 57);
	--wr_dark_gray_plus: rgb(3, 10, 23);
	--wr_tomato: rgb(255, 103, 70);
	--wr_green_tea: rgb(132, 178, 0);

	--wr_text: var(--wr_darker_gray);
	--wr_background: white;
	--wr_header: var(--wr_blue);

	--wr_primary: var(--wr_dark_blue);
}

/* Override some colors for dark theme */
/*@media (prefers-color-scheme: dark) {*/
/*	:root {*/
/*		--wr_text: var(--wr_light_blue_plus);*/
/*		--wr_background: #121212;*/
/*		--wr_header: var(--wr_darker_gray);*/
/*	}*/
/*}*/

/* Set font and other global properties */
* {
	font-family: 'Exo 2', Arial, sans-serif;
}

*, *:before, *:after {
	box-sizing: inherit;
}

/* Set selection behaviour */
*::selection {
	color: var(--wr_light_blue_plus);
	background-color: var(--wr_dark_blue);
}

html {
	box-sizing: border-box;
}

body {
	color: var(--wr_text);
	background-color: var(--wr_background);
	margin: 0;
	display: flex;
	min-height: 100vh;
	flex-direction: column;
}

body > * {
	padding: 0 5vw;
}

header, footer {
	background-color: var(--wr_header);
	display: block;
	flex: 0 0 auto;
}

main {
	flex: 1 0 auto;
}

/* Set input style */
div.input {
	position: relative;
}

input {
	display: block;
	background: transparent;
	padding: 0.4em 0.4em;
	border: none;
	border-bottom: 0.15em solid var(--wr_text);
	color: var(--wr_text);
	font-size: 1em;
	transition: 0.3s;
	min-width: 20vw;
	max-width: 70vw;
}

input::placeholder {
	user-select: none;
}

input:focus {
	border-bottom-color: var(--wr_primary);
	outline: none;
}

input + label {
	background: transparent;
	pointer-events: none;
	user-select: none;
	position: absolute;
	top: 0.4em;
	left: 0.4em;
	transition: 0.3s;
}

input:focus + label {
	top: -1em;
	font-weight: bold;
	font-size: 0.85em;
	color: var(--wr_primary);
}

input:not(:focus):valid:not(:placeholder-shown) {
	border-bottom-color: var(--wr_green_tea);
}

input:not(:focus):valid:not(:placeholder-shown) + label {
	top: -1em;
	font-weight: bold;
	font-size: 0.85em;
	color: var(--wr_green_tea);
}

input:not(:focus):invalid:not(:placeholder-shown) {
	border-bottom-color: var(--wr_tomato);
}

input:not(:focus):invalid:not(:placeholder-shown) + label {
	top: -1em;
	font-weight: bold;
	font-size: 0.85em;
	color: var(--wr_tomato);
}

/* Set button style */
button {
	cursor: pointer;
	user-select: none;
	font-weight: bold;
	font-size: 1em;
	color: var(--wr_text);
	background-color: transparent;
	border: 0.15em solid var(--wr_primary);
	border-radius: 0;
	padding: 0.75em 1em;
	transition: 0.3s;
}

button:hover {
	color: var(--wr_background);
	background-color: var(--wr_primary);
}

button:focus {
	color: var(--wr_background);
	background-color: var(--wr_primary);
	outline: none;
}

button:disabled {
	cursor: default;
}

button:disabled:hover {
	color: var(--wr_text);
	background-color: transparent;
}

/* Additional attributes */
.center_parent {
	padding: 1em;
	display: flex;
	justify-content: center;
	align-items: center;
}

ul.no_style {
	padding: 0;
	list-style: none;
}

.text_center {
	text-align: center;
}

.float_left {
	float: left;
}

.float_right {
	float: right;
}

.error {
	color: var(--wr_tomato) !important;
}

.good {
	color: var(--wr_green_tea) !important;
}

.vertical_scroll {
	overflow-x: hidden;
	overflow-y: auto;
}

.horizontal_scroll {
	overflow-x: auto;
	overflow-y: hidden;
}

/* Set scrollbar behaviour for webkit browsers */
::-webkit-scrollbar-track {
	background-color: var(--wr_dark_gray_plus);
}

::-webkit-scrollbar-thumb {
	background-color: var(--wr_dark_gray);
}

::-webkit-scrollbar-thumb:hover {
	background-color: var(--wr_dark_blue);
}

::-webkit-scrollbar {
	width: 0.8em;
	height: 0.8em;
}
