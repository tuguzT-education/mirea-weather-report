@charset "UTF-8";
@import url('https://fonts.googleapis.com/css2?family=Exo+2:wght@300&display=swap');

/* Define color variables */
:root {
	--wr_dark_blue: rgb(57, 125, 255);
	--wr_blue: rgb(148, 179, 255);
	--wr_light_blue: rgb(198, 212, 255);
	--wr_light_blue_plus: rgb(246, 249, 255);
	--wr_light_gray: rgb(191, 199, 214);
	--wr_gray: rgb(85, 94, 110);
	--wr_dark_gray: rgb(54, 60, 71);
	--wr_darker_gray: rgb(29, 35, 43);
	--wr_dark_gray_plus: rgb(3, 10, 23);
	--wr_tomato: rgb(255, 103, 70);
	--wr_green_tea: rgb(132, 178, 0);

	--wr_text: var(--wr_darker_gray);
	--wr_background: white;
	--wr_header: var(--wr_blue);
	--wr_autofill_background: rgb(223, 232, 255);
	--wr_panel: var(--wr_light_blue);
	--wr_table_row: rgb(221, 231, 255);

	--wr_primary: var(--wr_dark_blue);

	--wr_radius: 0.25em;
	--wr_transition_duration: 0.15s;
}

/* Override some colors for dark theme */
@media (prefers-color-scheme: dark) {
	:root {
		--wr_text: var(--wr_light_blue_plus);
		--wr_background: #0e0e0e;
		--wr_header: #181b1f;
		--wr_autofill_background: var(--wr_dark_gray);
		--wr_panel: var(--wr_darker_gray);
		--wr_table_row: #2a2f37;
	}
}

/* Set font and other global properties */
* {
	font-family: 'Exo 2', Arial, sans-serif;
}

*, *:before, *:after {
	box-sizing: inherit;
}

/* Set selection behaviour */
*::selection {
	color: var(--wr_light_blue_plus);
	background-color: var(--wr_dark_blue);
}

html {
	box-sizing: border-box;
}

body {
	color: var(--wr_text);
	background-color: var(--wr_background);
	margin: 0;
	display: flex;
	min-height: 100vh;
	flex-direction: column;
}

body > * {
	padding: 0 5vw;
}

header, footer {
	background-color: var(--wr_header);
	display: block;
	flex: 0 0 auto;
}

main {
	flex: 1 0 auto;
}

a {
	text-decoration: none;
	color: var(--wr_primary);
	font-weight: bold;
}

a:hover {
	text-decoration: underline;
}

a:focus {
	text-decoration: underline;
	color: var(--wr_tomato);
}

/* Set input style */
div.input {
	position: relative;
}

div.input > span.error {
	margin: 0.4em;
}

input {
	display: block;
	background: transparent;
	padding: 0.4em;
	border: none;
	border-bottom: 0.15em solid var(--wr_text);
	border-radius: 0;
	color: var(--wr_text);
	font-size: 1em;
	min-width: 30vw;
	width: 100%;
	max-width: 70vw;
	transition: var(--wr_transition_duration);
}

input::placeholder {
	user-select: none;
}

input:focus {
	border-bottom-color: var(--wr_primary);
	outline: none;
}

input + label {
	background: transparent;
	pointer-events: none;
	user-select: none;
	position: absolute;
	top: 0.4em;
	left: 0.4em;
	transition: var(--wr_transition_duration);
}

input:focus + label {
	top: -1.4em;
	font-weight: bold;
	font-size: 0.85em;
	color: var(--wr_primary);
}

input:not(:focus):valid:not(:placeholder-shown) {
	border-bottom-color: var(--wr_green_tea);
}

input:not(:focus):valid:not(:placeholder-shown) + label {
	top: -1.4em;
	font-weight: bold;
	font-size: 0.85em;
	color: var(--wr_green_tea);
}

input:not(:focus):invalid:not(:placeholder-shown) {
	border-bottom-color: var(--wr_tomato);
}

input:not(:focus):invalid:not(:placeholder-shown) + label {
	top: -1.4em;
	font-weight: bold;
	font-size: 0.85em;
	color: var(--wr_tomato);
}

/* Set button style */
button {
	cursor: pointer;
	user-select: none;
	font-weight: bold;
	font-size: 1em;
	color: var(--wr_text);
	background-color: transparent;
	border: 0.15em solid var(--wr_primary);
	border-radius: 0;
	padding: 0.75em 1em;
	transition: var(--wr_transition_duration);
}

button:hover, button:focus {
	color: var(--wr_background);
	background-color: var(--wr_primary);
	outline: none;
}

button:disabled {
	cursor: default;
}

button:disabled:hover {
	color: var(--wr_text);
	background-color: transparent;
}

button.no_style {
	border: none;
}

/* Set style for button-like links */
.button {
	display: block;
	text-decoration: none;
	font-weight: bold;
	font-size: medium;
	border-radius: 0;
	border: none;
	color: var(--wr_text);
	background-color: transparent;
	transition: var(--wr_transition_duration);
	cursor: pointer;
	user-select: none;
}

.button:hover, .button:focus {
	text-decoration: none;
	color: var(--wr_text);
	background-color: var(--wr_primary);
	outline: none;
}

/* Set design of header menu with dropdown labels */
ul.menu {
	display: block;
	position: relative;
}

ul.dropdown {
	display: none;
	position: absolute;
	right: 0;
	z-index: 1;
}

ul.dropdown * {
	display: inline-block;
	min-width: 100%;
	width: max-content;
	text-decoration: none;
}

ul.dropdown span {
	display: initial;
	min-width: initial;
	width: initial;
	text-decoration: initial;
}

ul.dropdown a {
	background-color: var(--wr_header);
	color: var(--wr_text);
	transition: var(--wr_transition_duration);
}

ul.dropdown a:hover {
	background-color: var(--wr_primary);
}

ul.dropdown a:focus {
	background-color: var(--wr_primary);
	outline: none;
}

ul.menu > li:hover > ul.dropdown {
	display: block;
}

ul.menu > li:focus-within > ul.dropdown {
	display: block;
}

/* Set style of table */
table {
	border-collapse: collapse;
}

caption {
	padding: 0.75em;
	background-color: var(--wr_header);
	border-radius: var(--wr_radius) var(--wr_radius) 0 0;
	font-size: larger;
	text-align: left;
	font-weight: bold;
}

th {
	background-color: var(--wr_panel);
	border-bottom: 0.15em solid var(--wr_text);
	padding: 0.5em;
	text-align: left;
}

td {
	padding: 0.5em;
	text-align: left;
	transition: var(--wr_transition_duration);
}

tr {
	background-color: var(--wr_table_row);
}

tr:hover > td {
	background-color: var(--wr_panel);
}

/* Additional attributes */
.center_vertically_parent {
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.center_parent {
	padding: 1em;
	display: flex;
	justify-content: center;
	align-items: center;
}

ul.no_style {
	padding-left: 0;
	list-style: none;
}

.panel {
	background: var(--wr_panel);
	border: none;
	border-radius: var(--wr_radius);
}

.panel.input_form {
	margin: 2em;
}

.text_center {
	text-align: center;
}

.float_left {
	float: left;
}

.float_right {
	float: right;
}

.error {
	color: var(--wr_tomato) !important;
}

.good {
	color: var(--wr_green_tea) !important;
}

.inline_block {
	display: inline-block;
}

.flex {
	display: flex;
}

.block {
	display: block;
}

.full_width {
	width: 100%;
}

.vertical_scroll {
	overflow-x: hidden;
	overflow-y: auto;
}

.horizontal_scroll {
	overflow-x: auto;
	overflow-y: hidden;
}

.large_font {
	font-size: large;
}

.medium_font {
	font-size: medium;
}

.margin_0p5 {
	margin: 0.5em;
}

.margin_0p5_left {
	margin-left: 0.5em;
}

.margin_0p5_right {
	margin-right: 0.5em;
}

.margin_0p5_vert {
	margin: 0.5em 0;
}

.margin_0p5_bottom {
	margin-bottom: 0.5em;
}

.margin_1_vert {
	margin: 1em 0;
}

.margin_0 {
	margin: 0;
}

.margin_1 {
	margin: 1em;
}

.margin_1_right {
	margin-right: 1em;
}

.padding_0p5 {
	padding: 0.5em;
}

.padding_0p5_vert {
	padding: 0.5em 0;
}

.padding_1 {
	padding: 1em;
}

.padding_0 {
	padding: 0;
}

.padding_1p275 {
	padding: 1.275em;
}

/* Set scrollbar behaviour for webkit browsers */
::-webkit-scrollbar-track {
	background-color: var(--wr_dark_gray_plus);
}

::-webkit-scrollbar-thumb {
	background-color: var(--wr_dark_gray);
}

::-webkit-scrollbar-thumb:hover {
	background-color: var(--wr_dark_blue);
}

::-webkit-scrollbar {
	width: 0.8em;
	height: 0.8em;
}

/* Set autofill style for webkit browsers */
:-webkit-autofill {
	caret-color: var(--wr_text);
	-webkit-text-fill-color: var(--wr_text);
	-webkit-box-shadow: 0 0 0 2em var(--wr_autofill_background) inset;
	transition: 0s;
}

:-webkit-autofill::selection {
	-webkit-text-fill-color: var(--wr_light_blue_plus);
	background-color: var(--wr_dark_blue);
}

input:-webkit-autofill:not(:focus):not(:placeholder-shown) {
	border-bottom-color: var(--wr_text);
}

input:-webkit-autofill:not(:focus):not(:placeholder-shown) + label {
	top: -1.4em;
	font-weight: bold;
	font-size: 0.85em;
	color: var(--wr_text);
}
